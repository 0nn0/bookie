generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model guests_owners {
  id          String     @id(map: "guests_pkey") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at  DateTime   @default(now()) @db.Timestamptz(6)
  profile_id  String     @db.Uuid
  property_id String     @db.Uuid
  role        String     @db.VarChar
  updated_at  DateTime?  @db.Timestamptz(6)
  profiles    profiles   @relation(fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  properties  properties @relation(fields: [property_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  roles       roles      @relation(fields: [role], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model profiles {
  id              String          @id @db.Uuid
  updated_at      DateTime?       @db.Timestamptz(6)
  first_name      String?         @db.VarChar
  last_name       String?         @db.VarChar
  last_sign_in_at DateTime?       @db.Timestamptz(6)
  email           String          @db.VarChar
  guests_owners   guests_owners[]
}

model properties {
  id            String          @id(map: "homes_pkey") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at    DateTime        @default(now()) @db.Timestamptz(6)
  name          String
  updated_at    DateTime?       @db.Timestamptz(6)
  guests_owners guests_owners[]
}

model roles {
  id            String          @id @db.VarChar
  guests_owners guests_owners[]
}
